sumary(cars)
summary(cars)
cars
a <-available.package()
a <- available.packages()
head(a)
head(rownames(a))
tail(rownames(a))
n <-signif(nrow(a))
install.packages("ggplot2")
installed.packages()
library(ggplot2)
?ggplot
df <- data.frame(gp = factor(rep(letters[1:3], each = 10)),
y = rnorm(30))
# Compute sample mean and standard deviation in each group
ds <- plyr::ddply(df, "gp", plyr::summarise, mean = mean(y), sd = sd(y))
# Declare the data frame and common aesthetics.
# The summary data frame ds is used to plot
# larger red points in a second geom_point() layer.
# If the data = argument is not specified, it uses the
# declared data frame from ggplot(); ditto for the aesthetics.
ggplot(df, aes(x = gp, y = y)) +
geom_point() +
geom_point(data = ds, aes(y = mean),
colour = 'red', size = 3)
# Same plot as above, declaring only the data frame in ggplot().
# Note how the x and y aesthetics must now be declared in
# each geom_point() layer.
ggplot(df) +
geom_point(aes(x = gp, y = y)) +
geom_point(data = ds, aes(x = gp, y = mean),
colour = 'red', size = 3)
# Set up a skeleton ggplot object and add layers:
ggplot() +
geom_point(data = df, aes(x = gp, y = y)) +
geom_point(data = ds, aes(x = gp, y = mean),
colour = 'red', size = 3) +
geom_errorbar(data = ds, aes(x = gp, y = mean,
ymin = mean - sd, ymax = mean + sd),
colour = 'red', width = 0.4)
install.packages("devtools")
library(datasets)
data(airquality)
cor(airquality)
x <- 1
print(x)
x
msg <- "Hola a todos"
msg
# Prueba de Asignacion de Variables
x <- 1
#Inpresion forzada
print(x)
#Impresion Directa
x
msg <- "Hola a todos"
msg
# Prueba de Asignacion de Variables
x <- 1
#Inpresion forzada
print(x)
#Impresion Directa
x
msg <- "Hola a todos"
msg
# Prueba de Asignacion de Variables
x <- 1
#Inpresion forzada
print(x)
#Impresion Directa
x
msg <- "Hola a todos"
msg
x <- # Un comentario sin sentido
# Prueba de Asignacion de Variables
x <- 1
#Inpresion forzada
print(x)
#Impresion Directa
x
msg <- "Hola a todos"
msg
x <- # Un comentario sin sentido
x <- 1:100
x
x <- rep(c("a","b","c"),30)
x
?class
class(1)    # numeric
class(1L)   # intenger
class(1*1l) # numeric
class(1)    # numeric
class(1L)   # intenger
class(1*1L) # numeric
(3+12i)*(1-12i)
class((3+12i)*(1-12i))
class(3+12i) # complex
(3+12i)*(3-12i)
class((3+12i)*(3-12i))
class(TRUE)  #boolean
class(TRUE*1)
class(c(1,FALSE,3L,2+4i,"a"))
a <- vector(1,FALSE,3L,2+4i,"a")
?vector
a <- vector(mode="numeric", length=10)
a
print(a)
a
a
a
a
a
a
a
a
a
a
a
Inf
1/inf
1/Inf
exp(-Inf)
0/0
0*1/0
0*Inf
attributes(a)
attributes(airquality)
a <- c(1,5,3L,2+4i,T,FALSE)
a
b <- c(a,"cadena")
b
c <- c(1,5,3L,2+4i,T,FALSE,"cadena")
c
# Coecion explicita
x <- 0:6
class(x)
as.numeric(x)
as.logical(x)
as.complex(x)
as.character(x)
as.numeric(c(3+4i,2+0i))
data <- read.csv(file="table.csv")
head(data)
data <- read.csv(file="table.csv")
head(data)
setwd("~/Actuarios/Ignacio Trujillo/test-repo/Programacion_Actuarial_III")
data <- read.csv(file="table.csv")
data <- read.csv(file = "table.csv")
head(date)
head(date)
head(data)
class(data)
?head()
head(data,10)
tail(data,10)
